/home/amsequeira/enzymeClassification/models/cv_len_pad/64_64_32_1000_pre_terminal_cv
self
x_train
y_train
x_test
y_test
number_classes
problem_type
x_dval
y_dval
model
epochs
batch_size
callbacks
reduce_lr
early_stopping
checkpoint
tensorboard
early_stopping_patience
reduce_lr_patience
reduce_lr_factor
reduce_lr_min
path
report_name
verbose
validation_split
shuffle
class_weights
===Callbacks===

generate_callbacks
[<tensorflow.python.keras.callbacks.EarlyStopping object at 0x7fcc2425a2b0>, <tensorflow.python.keras.callbacks.ReduceLROnPlateau object at 0x7fcc2425a460>, <tensorflow.python.keras.callbacks.ModelCheckpoint object at 0x7fcc2425a4c0>]
===SCORING TEST SET ===

model_complete_evaluate
{'self': <deep_ml.DeepML object at 0x7fcc2425a280>, 'x_test': array([[[1, 0, 0, ..., 0, 0, 0],
        [1, 0, 0, ..., 0, 0, 0],
        [1, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 1, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[1, 0, 0, ..., 0, 0, 0],
        [1, 0, 0, ..., 0, 0, 0],
        [1, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 1, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[1, 0, 0, ..., 0, 0, 0],
        [1, 0, 0, ..., 0, 0, 0],
        [1, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 1, 0, 0],
        [1, 0, 0, ..., 0, 0, 0]],

       ...,

       [[1, 0, 0, ..., 0, 0, 0],
        [1, 0, 0, ..., 0, 0, 0],
        [1, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[1, 0, 0, ..., 0, 0, 0],
        [1, 0, 0, ..., 0, 0, 0],
        [1, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=int8), 'y_test': array([2., 2., 1., ..., 0., 0., 0.], dtype=float32), 'model': None}
report

              precision    recall  f1-score   support

         0.0       0.83      0.74      0.78      4541
         1.0       0.76      0.90      0.83      3813
         2.0       0.83      0.94      0.88     10869
         3.0       0.90      0.78      0.83      6897
         4.0       0.94      0.77      0.85      2585
         5.0       0.97      0.77      0.86      1617
         6.0       0.93      0.96      0.95      3258
         7.0       0.97      0.95      0.96      1372

    accuracy                           0.86     34952
   macro avg       0.89      0.85      0.87     34952
weighted avg       0.87      0.86      0.86     34952


===confusion_matrix===

[[ 3359   188   629   298    18     5    22    22]
 [   60  3449   187    60    17     0    31     9]
 [  203   201 10211   149    21     9    71     4]
 [  299   377   753  5350    49    12    53     4]
 [   44   190   264    62  2002    11    12     0]
 [   38    47   157    39    33  1252    51     0]
 [    5    37    72     6     0     3  3135     0]
 [   27    21    13     9     0     0     0  1302]]

===multilabel confusion matrix===

[[[29735   676]
  [ 1182  3359]]

 [[30078  1061]
  [  364  3449]]

 [[22008  2075]
  [  658 10211]]

 [[27432   623]
  [ 1547  5350]]

 [[32229   138]
  [  583  2002]]

 [[33295    40]
  [  365  1252]]

 [[31454   240]
  [  123  3135]]

 [[33541    39]
  [   70  1302]]]

===scores report===
metrics	scores
Accuracy	0.8600
MCC	0.8291
log_loss	0.4403
f1 score weighted	0.8588
f1 score macro	0.8673
f1 score micro	0.8600
roc_auc ovr	0.9818
roc_auc ovo	0.9840
precision	0.8655
recall	0.8600

===Callbacks===

generate_callbacks
[<tensorflow.python.keras.callbacks.EarlyStopping object at 0x7fcc2425a2b0>, <tensorflow.python.keras.callbacks.ReduceLROnPlateau object at 0x7fcc2425a460>, <tensorflow.python.keras.callbacks.ModelCheckpoint object at 0x7fcc2425a4c0>]
===SCORING TEST SET ===

model_complete_evaluate
{'self': <deep_ml.DeepML object at 0x7fcc2425a280>, 'x_test': array([[[1, 0, 0, ..., 0, 0, 0],
        [1, 0, 0, ..., 0, 0, 0],
        [1, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[1, 0, 0, ..., 0, 0, 0],
        [1, 0, 0, ..., 0, 0, 0],
        [1, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 1],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[1, 0, 0, ..., 0, 0, 0],
        [1, 0, 0, ..., 0, 0, 0],
        [1, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[1, 0, 0, ..., 0, 0, 0],
        [1, 0, 0, ..., 0, 0, 0],
        [1, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 1, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        ...,
        [1, 0, 0, ..., 0, 0, 0],
        [1, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[1, 0, 0, ..., 0, 0, 0],
        [1, 0, 0, ..., 0, 0, 0],
        [1, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=int8), 'y_test': array([2., 2., 2., ..., 0., 0., 0.], dtype=float32), 'model': None}
report

              precision    recall  f1-score   support

         0.0       0.36      0.02      0.03      4541
         1.0       0.00      0.00      0.00      3813
         2.0       0.34      0.61      0.43     10869
         3.0       0.00      0.00      0.00      6897
         4.0       0.00      0.00      0.00      2585
         5.0       0.00      0.00      0.00      1616
         6.0       0.45      0.02      0.04      3258
         7.0       0.04      0.41      0.07      1372

    accuracy                           0.21     34951
   macro avg       0.15      0.13      0.07     34951
weighted avg       0.19      0.21      0.15     34951


===confusion_matrix===

[[  80    0 2719    0    0    0   14 1728]
 [  23    0 2220    0    0    0    6 1564]
 [  52    0 6641    0    0    0   25 4151]
 [  56    0 4051    0    0    0   17 2773]
 [   4    0 1424    0    0    0    6 1151]
 [   4    0  859    0    0    0    2  751]
 [   5    0 1100    0    0    0   60 2093]
 [   1    0  800    0    0    0    2  569]]

===multilabel confusion matrix===

[[[30265   145]
  [ 4461    80]]

 [[31138     0]
  [ 3813     0]]

 [[10909 13173]
  [ 4228  6641]]

 [[28054     0]
  [ 6897     0]]

 [[32366     0]
  [ 2585     0]]

 [[33335     0]
  [ 1616     0]]

 [[31621    72]
  [ 3198    60]]

 [[19368 14211]
  [  803   569]]]

===scores report===
metrics	scores
Accuracy	0.2103
MCC	0.0254
log_loss	2.1179
f1 score weighted	0.1450
f1 score macro	0.0715
f1 score micro	0.2103
roc_auc ovr	0.5677
roc_auc ovo	0.5744
precision	0.1943
recall	0.2103

===Callbacks===

generate_callbacks
[<tensorflow.python.keras.callbacks.EarlyStopping object at 0x7fcc2425a2b0>, <tensorflow.python.keras.callbacks.ReduceLROnPlateau object at 0x7fcc2425a460>, <tensorflow.python.keras.callbacks.ModelCheckpoint object at 0x7fcc2425a4c0>]
===SCORING TEST SET ===

model_complete_evaluate
{'self': <deep_ml.DeepML object at 0x7fcc2425a280>, 'x_test': array([[[1, 0, 0, ..., 0, 0, 0],
        [1, 0, 0, ..., 0, 0, 0],
        [1, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 1, 0, ..., 0, 0, 0]],

       [[1, 0, 0, ..., 0, 0, 0],
        [1, 0, 0, ..., 0, 0, 0],
        [1, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [1, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[1, 0, 0, ..., 0, 0, 0],
        [1, 0, 0, ..., 0, 0, 0],
        [1, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 1, 0, 0],
        [0, 0, 0, ..., 0, 0, 1]],

       ...,

       [[1, 0, 0, ..., 0, 0, 0],
        [1, 0, 0, ..., 0, 0, 0],
        [1, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 1],
        [0, 0, 0, ..., 0, 0, 0]],

       [[1, 0, 0, ..., 0, 0, 0],
        [1, 0, 0, ..., 0, 0, 0],
        [1, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [1, 0, 0, ..., 0, 0, 0]],

       [[1, 0, 0, ..., 0, 0, 0],
        [1, 0, 0, ..., 0, 0, 0],
        [1, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 1, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=int8), 'y_test': array([2., 2., 1., ..., 0., 0., 0.], dtype=float32), 'model': None}
report

              precision    recall  f1-score   support

         0.0       0.84      0.63      0.72      4542
         1.0       0.86      0.68      0.76      3814
         2.0       0.86      0.83      0.85     10869
         3.0       0.73      0.79      0.76      6896
         4.0       0.88      0.74      0.80      2584
         5.0       0.72      0.73      0.72      1616
         6.0       0.60      0.96      0.74      3258
         7.0       0.85      0.91      0.88      1372

    accuracy                           0.78     34951
   macro avg       0.79      0.78      0.78     34951
weighted avg       0.80      0.78      0.79     34951


===confusion_matrix===

[[2860   96  457  719   26   98  179  107]
 [  65 2576  272  358   59   68  380   36]
 [ 171  114 9050  596   94  129  684   31]
 [ 212  107  442 5457   47   83  516   32]
 [  27   67  189  192 1914   63  128    4]
 [  22   30   66  107   28 1179  177    7]
 [   8    4   37   41    6   19 3142    1]
 [  24   14   19   20    2    2   37 1254]]

===multilabel confusion matrix===

[[[29880   529]
  [ 1682  2860]]

 [[30705   432]
  [ 1238  2576]]

 [[22600  1482]
  [ 1819  9050]]

 [[26022  2033]
  [ 1439  5457]]

 [[32105   262]
  [  670  1914]]

 [[32873   462]
  [  437  1179]]

 [[29592  2101]
  [  116  3142]]

 [[33361   218]
  [  118  1254]]]

===scores report===
metrics	scores
Accuracy	0.7849
MCC	0.7399
log_loss	0.6581
f1 score weighted	0.7853
f1 score macro	0.7788
f1 score micro	0.7849
roc_auc ovr	0.9626
roc_auc ovo	0.9676
precision	0.8016
recall	0.7849

===Callbacks===

generate_callbacks
[<tensorflow.python.keras.callbacks.EarlyStopping object at 0x7fcc2425a2b0>, <tensorflow.python.keras.callbacks.ReduceLROnPlateau object at 0x7fcc2425a460>, <tensorflow.python.keras.callbacks.ModelCheckpoint object at 0x7fcc2425a4c0>]
===SCORING TEST SET ===

model_complete_evaluate
{'self': <deep_ml.DeepML object at 0x7fcc2425a280>, 'x_test': array([[[1, 0, 0, ..., 0, 0, 0],
        [1, 0, 0, ..., 0, 0, 0],
        [1, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [1, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[1, 0, 0, ..., 0, 0, 0],
        [1, 0, 0, ..., 0, 0, 0],
        [1, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [1, 0, 0, ..., 0, 0, 0]],

       [[1, 0, 0, ..., 0, 0, 0],
        [1, 0, 0, ..., 0, 0, 0],
        [1, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 1, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       ...,

       [[1, 0, 0, ..., 0, 0, 0],
        [1, 0, 0, ..., 0, 0, 0],
        [1, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 1, 0, 0],
        [0, 0, 1, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 1]],

       [[0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [1, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[1, 0, 0, ..., 0, 0, 0],
        [1, 0, 0, ..., 0, 0, 0],
        [1, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 1, 0]]], dtype=int8), 'y_test': array([2., 2., 1., ..., 0., 0., 0.], dtype=float32), 'model': None}
report

              precision    recall  f1-score   support

         0.0       0.80      0.77      0.78      4542
         1.0       0.88      0.84      0.86      3813
         2.0       0.84      0.93      0.88     10868
         3.0       0.88      0.82      0.85      6897
         4.0       0.97      0.78      0.86      2585
         5.0       0.88      0.85      0.87      1616
         6.0       0.91      0.96      0.94      3258
         7.0       0.91      0.98      0.94      1372

    accuracy                           0.87     34951
   macro avg       0.88      0.86      0.87     34951
weighted avg       0.87      0.87      0.87     34951


===confusion_matrix===

[[ 3479    98   529   300     7    30    39    60]
 [   75  3217   301   123    18    26    38    15]
 [  277   103 10111   176    19    36   129    17]
 [  393   100   645  5623    12    45    52    27]
 [   49   103   250   110  2008    36    22     7]
 [   46    28   106    37     3  1373    21     2]
 [   15    18    67    19     2     7  3128     2]
 [   11     3    12     2     0     0     2  1342]]

===multilabel confusion matrix===

[[[29543   866]
  [ 1063  3479]]

 [[30685   453]
  [  596  3217]]

 [[22173  1910]
  [  757 10111]]

 [[27287   767]
  [ 1274  5623]]

 [[32305    61]
  [  577  2008]]

 [[33155   180]
  [  243  1373]]

 [[31390   303]
  [  130  3128]]

 [[33449   130]
  [   30  1342]]]

===scores report===
metrics	scores
Accuracy	0.8664
MCC	0.8363
log_loss	0.4254
f1 score weighted	0.8654
f1 score macro	0.8726
f1 score micro	0.8664
roc_auc ovr	0.9820
roc_auc ovo	0.9847
precision	0.8683
recall	0.8664

===Callbacks===

generate_callbacks
[<tensorflow.python.keras.callbacks.EarlyStopping object at 0x7fcc2425a2b0>, <tensorflow.python.keras.callbacks.ReduceLROnPlateau object at 0x7fcc2425a460>, <tensorflow.python.keras.callbacks.ModelCheckpoint object at 0x7fcc2425a4c0>]
===SCORING TEST SET ===

model_complete_evaluate
{'self': <deep_ml.DeepML object at 0x7fcc2425a280>, 'x_test': array([[[1, 0, 0, ..., 0, 0, 0],
        [1, 0, 0, ..., 0, 0, 0],
        [1, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [1, 0, 0, ..., 0, 0, 0]],

       [[1, 0, 0, ..., 0, 0, 0],
        [1, 0, 0, ..., 0, 0, 0],
        [1, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [1, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[1, 0, 0, ..., 0, 0, 0],
        [1, 0, 0, ..., 0, 0, 0],
        [1, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 1, 0, ..., 0, 0, 0]],

       ...,

       [[1, 0, 0, ..., 0, 0, 0],
        [1, 0, 0, ..., 0, 0, 0],
        [1, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]],

       [[1, 0, 0, ..., 0, 0, 0],
        [1, 0, 0, ..., 0, 0, 0],
        [1, 0, 0, ..., 0, 0, 0],
        ...,
        [1, 0, 0, ..., 0, 0, 0],
        [1, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 1]],

       [[1, 0, 0, ..., 0, 0, 0],
        [1, 0, 0, ..., 0, 0, 0],
        [1, 0, 0, ..., 0, 0, 0],
        ...,
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0],
        [0, 0, 0, ..., 0, 0, 0]]], dtype=int8), 'y_test': array([2., 2., 2., ..., 0., 0., 0.], dtype=float32), 'model': None}
report

              precision    recall  f1-score   support

         0.0       0.76      0.67      0.71      4542
         1.0       0.92      0.48      0.63      3813
         2.0       0.88      0.75      0.81     10868
         3.0       0.51      0.89      0.65      6897
         4.0       0.88      0.55      0.68      2585
         5.0       0.76      0.66      0.71      1616
         6.0       0.86      0.90      0.88      3258
         7.0       0.92      0.89      0.90      1372

    accuracy                           0.74     34951
   macro avg       0.81      0.72      0.75     34951
weighted avg       0.79      0.74      0.74     34951


===confusion_matrix===

[[3027   23  243 1116   11   41   29   52]
 [ 116 1835  218 1292   74  114  138   26]
 [ 342   47 8121 2044   65   65  169   15]
 [ 329   31  251 6165   20   33   58   10]
 [  51   24  198  793 1428   58   29    4]
 [  32    9   98  333   18 1070   55    1]
 [  14    8   49  228    1   10 2947    1]
 [  46    9   34   34    0    8   21 1220]]

===multilabel confusion matrix===

[[[29479   930]
  [ 1515  3027]]

 [[30987   151]
  [ 1978  1835]]

 [[22992  1091]
  [ 2747  8121]]

 [[22214  5840]
  [  732  6165]]

 [[32177   189]
  [ 1157  1428]]

 [[33006   329]
  [  546  1070]]

 [[31194   499]
  [  311  2947]]

 [[33470   109]
  [  152  1220]]]

===scores report===
metrics	scores
Accuracy	0.7385
MCC	0.6904
log_loss	0.7815
f1 score weighted	0.7424
f1 score macro	0.7473
f1 score micro	0.7385
roc_auc ovr	0.9529
roc_auc ovo	0.9575
precision	0.7921
recall	0.7385

===TRAIN MODELS with CV===

train_model_cv	Accuracy	MCC	log_loss	f1 score weighted	f1 score macro	f1 score micro	roc_auc ovr	roc_auc ovo	precision	recall
0	0.8600366216525521	0.8291335738878457	0.44032961982625035	0.8587944949566935	0.8673472198027583	0.8600366216525521	0.9818465079010349	0.9840315270731465	0.865495656624759	0.8600366216525521
1	0.21029441217704786	0.025357413266742436	2.1178998334725483	0.14504282065880741	0.07153789637901828	0.21029441217704786	0.5677118115629354	0.5743528251547653	0.194307367154136	0.21029441217704786
2	0.7848702469171125	0.7399459321194358	0.658125678636503	0.7852871622812133	0.7787597366013976	0.7848702469171125	0.9626025898669436	0.9675928676325756	0.8016434143342047	0.7848702469171125
3	0.8663843666847872	0.8363249757459692	0.42539514889728325	0.8654021132924204	0.8726338012087513	0.8663843666847872	0.9819956189505157	0.984718573707111	0.8683019712614899	0.8663843666847872
4	0.7385482532688621	0.6903914513453144	0.781549490318159	0.7423526649169427	0.7472962235097511	0.7385482532688621	0.9529008642739193	0.957455591570126	0.7921047986674192	0.7385482532688621
mean	0.6920267801400724	0.6242306692730615	0.8846599542301489	0.6793758512212155	0.6675149755003353	0.6920267801400724	0.8894114785110698	0.8936302770275448	0.7043706416084017	0.6920267801400724
std	0.245551667051666	0.3044291848878576	0.6310600213972688	0.2711058436566	0.3019721118803164	0.245551667051666	0.16124179006686024	0.15996980381411607	0.25696636740300494	0.245551667051666

Accuracy
MCC
log_loss
f1 score weighted
f1 score macro
f1 score micro
roc_auc ovr
roc_auc ovo
precision
recallFinished train_model_cv in 188698.2695 secs

